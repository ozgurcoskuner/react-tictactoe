{"version":3,"sources":["components/Square.js","components/MainSquare.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","handleClick","style","value","color","MainSquare","useState","squares","Array","fill","isXTurn","myArr","setMyArr","winner","setWinner","cloneSquares","slice","history","setHistory","i","includes","concat","length","Board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e779898.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <div className=\"square\">\r\n      <button\r\n        onClick={props.handleClick}\r\n        style={props.value == \"X\" ? { color: \"black\" } : { color: \"white\" }}\r\n      >\r\n        {props.value}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import React, { useState } from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nfunction MainSquare() {\r\n  const [myArr, setMyArr] = useState({\r\n    squares: Array(9).fill(null),\r\n    isXTurn: true,\r\n  });\r\n\r\n  const [winner, setWinner] = useState(\"\");\r\n\r\n  const cloneSquares = myArr.squares.slice(0);\r\n\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const handleClick = (i) => {\r\n    if (!(myArr.squares[i] == null) || winner) {\r\n      return;\r\n    } else if (myArr.squares[i] == null) {\r\n      myArr.isXTurn ? (cloneSquares[i] = \"X\") : (cloneSquares[i] = \"O\");\r\n\r\n      setMyArr({ squares: cloneSquares, isXTurn: !myArr.isXTurn });\r\n      const winningCondition =\r\n        (cloneSquares[0] &&\r\n          cloneSquares[1] == cloneSquares[2] &&\r\n          cloneSquares[2] == cloneSquares[0]) ||\r\n        (cloneSquares[3] &&\r\n          cloneSquares[4] == cloneSquares[5] &&\r\n          cloneSquares[5] == cloneSquares[3]) ||\r\n        (cloneSquares[6] &&\r\n          cloneSquares[7] == cloneSquares[8] &&\r\n          cloneSquares[8] == cloneSquares[6]) ||\r\n        (cloneSquares[0] &&\r\n          cloneSquares[4] == cloneSquares[8] &&\r\n          cloneSquares[8] == cloneSquares[0]) ||\r\n        (cloneSquares[2] &&\r\n          cloneSquares[4] == cloneSquares[6] &&\r\n          cloneSquares[6] == cloneSquares[2]) ||\r\n        (cloneSquares[1] &&\r\n          cloneSquares[4] == cloneSquares[7] &&\r\n          cloneSquares[7] == cloneSquares[1]) ||\r\n        (cloneSquares[0] &&\r\n          cloneSquares[3] == cloneSquares[6] &&\r\n          cloneSquares[6] == cloneSquares[0]) ||\r\n        (cloneSquares[2] &&\r\n          cloneSquares[5] == cloneSquares[8] &&\r\n          cloneSquares[8] == cloneSquares[2]);\r\n      if (winningCondition) {\r\n        myArr.isXTurn ? setWinner(\"X\") : setWinner(\"O\");\r\n      } else if (!winner && !cloneSquares.includes(null)) {\r\n        setWinner(\"Friendship\");\r\n      }\r\n    }\r\n\r\n    setHistory(history.concat([cloneSquares]));\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (history.length > 1) {\r\n      if (winner) {\r\n        setWinner(\"\");\r\n      }\r\n      setMyArr({\r\n        isXTurn: !myArr.isXTurn,\r\n        squares: history[history.length - 2],\r\n      });\r\n\r\n      setHistory(history.slice(0, history.length - 1));\r\n    } else if (history.length == 1) {\r\n      setMyArr({ isXTurn: true, squares: Array(9).fill(null) });\r\n      setHistory([Array(9).fill(null)]);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-square\">\r\n        <Square handleClick={() => handleClick(0)} value={cloneSquares[0]} />\r\n        <Square handleClick={() => handleClick(1)} value={cloneSquares[1]} />\r\n        <Square handleClick={() => handleClick(2)} value={cloneSquares[2]} />\r\n\r\n        <Square handleClick={() => handleClick(3)} value={cloneSquares[3]} />\r\n        <Square handleClick={() => handleClick(4)} value={cloneSquares[4]} />\r\n        <Square handleClick={() => handleClick(5)} value={cloneSquares[5]} />\r\n\r\n        <Square handleClick={() => handleClick(6)} value={cloneSquares[6]} />\r\n        <Square handleClick={() => handleClick(7)} value={cloneSquares[7]} />\r\n        <Square handleClick={() => handleClick(8)} value={cloneSquares[8]} />\r\n      </div>\r\n\r\n      <div className=\"info\">\r\n        <div className=\"score-board\">\r\n          {winner ? (\r\n            <h2>\r\n              Congratulations! <br />\r\n              <br /> {winner} is winner!!\r\n            </h2>\r\n          ) : myArr.isXTurn ? (\r\n            <h2>Next player: X </h2>\r\n          ) : (\r\n            <h2>Next player: O</h2>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"undo\">\r\n          <button onClick={handleUndo}>Undo</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainSquare;\r\n","import React from \"react\";\r\nimport MainSquare from \"./MainSquare\";\r\n\r\nfunction Board() {\r\n  return (\r\n    <div className=\"board\">\r\n      <MainSquare />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react'\nimport Board from './components/Board'\nimport './Style/Style.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    <Board/>\n\n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}